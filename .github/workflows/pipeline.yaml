name: CI Checks

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    test:
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                shell: bash -e {0} # -e to fail on error

        strategy:
            fail-fast: false
            matrix:
                python: ["3.10"]
                os: [ubuntu-latest]

        env:
            OS: ${{ matrix.os }}
            PYTHON: ${{ matrix.python }}
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python }}
            - name: Get pip cache dir
              id: pip-cache-dir
              run: |
                  echo "::set-output name=dir::$(pip cache dir)"
            - name: Restore pip cache
              uses: actions/cache@v2
              with:
                  path: ${{ steps.pip-cache-dir.outputs.dir }}
                  key: pip-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml') }}
                  restore-keys: |
                      pip-${{ runner.os }}-${{ env.pythonLocation }}-
            - name: Install test dependencies
              run: |
                  python -m pip install --upgrade pip wheel
            - name: Install dependencies
              run: |
                  pip install ".[dev,test]"
            - name: Update system dependencies
              # due to recent versions of GLIBC missing
              run: |
                  sudo apt-get update && sudo apt-get install cmake libstdc++6 \
                  libcurl4-openssl-dev libssl-dev libxml2-dev libfontconfig1-dev \
                  libharfbuzz-dev libfribidi-dev \
                  libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev -y

            - name: Test
              env:
                  MPLBACKEND: agg
                  PLATFORM: ${{ matrix.os }}
                  DISPLAY: :42
              run: |
                  pytest -v --color=yes

    package:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python 3.10
              uses: actions/setup-python@v2
              with:
                  python-version: "3.10"
            - name: Install build dependencies
              run: python -m pip install --upgrade pip wheel twine build
            - name: Build package
              run: python -m build
            - name: Check package
              run: twine check --strict dist/*.whl
